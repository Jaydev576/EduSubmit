@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_RegisterLayout.cshtml";
}

<style>
    :root {
        --primary: #007bff;
        --success: #28a745;
        --secondary: #6c757d;
        --light-bg: #f8f9fa;
    }

    body {
        background: var(--light-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .card {
        max-width: 500px;
        width: 100%;
        border-radius: 15px;
        overflow: hidden;
        background: #fff;
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, var(--primary), #0056b3);
    }

    .form-label {
        color: #333;
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

    .form-control {
        border-radius: 8px;
        padding: 0.75rem;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: var(--primary);
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .btn-group {
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-check {
        display: none;
    }

    .btn-outline-primary {
        border-radius: 10px;
        padding: 0.6rem 1.5rem;
        font-weight: 500;
        border: 2px solid var(--primary);
        color: var(--primary);
        background: #fff;
        transition: all 0.3s ease;
    }

    .btn-outline-primary:hover {
        background: var(--primary);
        color: #fff;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }

    .btn-check:checked + .btn-outline-primary {
        background: var(--primary);
        color: #fff;
        border-color: var(--primary);
        box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }

    .btn-check:focus + .btn-outline-primary,
    .btn-outline-primary:focus {
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
    }

    .btn-success {
        background: var(--success);
        border: none;
        border-radius: 8px;
        padding: 0.75rem 2rem;
        transition: all 0.3s ease;
    }

    .btn-success:hover {
        background: #218838;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    }

    .btn-outline-secondary {
        border-radius: 8px;
        padding: 0.75rem 2rem;
        transition: all 0.3s ease;
    }

    .btn-outline-secondary:hover {
        background: var(--secondary);
        color: #fff;
        transform: translateY(-2px);
    }

    .alert-danger {
        border-radius: 8px;
        padding: 0.75rem 1.25rem;
        font-size: 0.9rem;
    }

    .invalid-feedback {
        display: none;
        font-size: 0.875rem;
        color: #dc3545;
    }

    .form-control:invalid:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }

    .needs-validation.was-validated .form-control:invalid ~ .invalid-feedback {
        display: block;
    }

    /* Responsive Styling */
    @@media (max-width: 768px) {
        .card {
            margin: 1rem;
            padding: 0.5rem;
        }

        .card-header h2 {
            font-size: 1.5rem;
        }

        .card-header p {
            font-size: 0.9rem;
        }

        .btn-outline-primary,
        .btn-success,
        .btn-outline-secondary {
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }

        .form-label {
            font-size: 0.95rem;
        }

        .form-control {
            font-size: 0.95rem;
            padding: 0.6rem;
        }

        .btn-group {
            flex-direction: column;
            gap: 0.5rem;
        }

        .d-flex.justify-content-between {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch !important;
        }

        .btn-warning {
            margin-top: 1rem;
            width: 100%;
        }
    }

    @@media (max-width: 576px) {
        .card-header h2 {
            font-size: 1.3rem;
        }

        .card-body {
            padding: 1rem;
        }

        .container {
            padding: 1rem;
        }
    }
</style>

<div class="container my-5 px-3">
    <div class="card shadow-lg">
        <div class="card-header bg-gradient-primary text-white text-center">
            <h2 class="mb-0 fw-bold">Welcome Back</h2>
            <p class="text-light mt-1">Log in to your account</p>
        </div>
        <div class="card-body p-4">
            @if (ViewBag.Error != null) {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @ViewBag.Error
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Login" asp-controller="Account" method="post" class="needs-validation" novalidate>
                <div class="mb-4">
                    <label class="form-label fw-semibold">User Type</label>
                    <div class="btn-group d-flex gap-2" role="group">
                        <input type="radio" class="btn-check" name="role" id="student" value="Student" required autocomplete="off">
                        <label class="btn btn-outline-primary shadow-sm" for="student">
                            <i class="bi bi-person me-2"></i>Student
                        </label>

                        <input type="radio" class="btn-check" name="role" id="instructor" value="Instructor" autocomplete="off">
                        <label class="btn btn-outline-primary shadow-sm" for="instructor">
                            <i class="bi bi-person-gear me-2"></i>Instructor
                        </label>

                        <input type="radio" class="btn-check" name="role" id="admin" value="Organization" autocomplete="off">
                        <label class="btn btn-outline-primary shadow-sm" for="admin">
                            <i class="bi bi-shield-lock me-2"></i>Admin
                        </label>
                    </div>
                    <div class="invalid-feedback d-block mt-2" id="role-error" style="display: none;">
                        Please select a user type.
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label fw-semibold">Email</label>
                    <input type="email" class="form-control shadow-sm" name="email" id="email" required />
                    <div class="invalid-feedback">Please enter a valid email address.</div>
                </div>
                <div class="mb-4">
                    <label for="password" class="form-label fw-semibold">Password</label>
                    <input type="password" class="form-control shadow-sm" name="password" id="password" required />
                    <div class="invalid-feedback">Please enter your password.</div>
                </div>
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                    <button type="submit" class="btn btn-success shadow-sm px-4 flex-fill">
                        <i class="bi bi-box-arrow-in-right me-2"></i>Login
                    </button>
                    <a href="@Url.Action("Register", "Register")" class="btn btn-outline-secondary shadow-sm px-4 flex-fill">
                        Register
                    </a>
                </div>
                <a href="@Url.Action("ChangePassword", "Account")" class="btn btn-warning shadow-sm px-4 w-100 mt-3">
                    Change Password
                </a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector(".needs-validation");
            const roleError = document.getElementById("role-error");
            const roleInputs = document.querySelectorAll('input[name="role"]');

            form.addEventListener("submit", function (event) {
                const roleSelected = document.querySelector('input[name="role"]:checked');

                if (!roleSelected) {
                    event.preventDefault();
                    event.stopPropagation();
                    roleError.style.display = "block";
                } else {
                    roleError.style.display = "none"; // Hide error when valid
                }

                form.classList.add("was-validated");
            });

            roleInputs.forEach((radio) => {
                radio.addEventListener("change", function () {
                    roleError.classList.remove("d-block");
                    roleError.classList.add("d-none");
                });
            });
        });
    </script>
}