

@{
    Layout = "~/Views/Shared/_InstructorLayout.cshtml";
    ViewData["Title"] = "Student Progress";
    ViewData["ActivePage"] = "StudentProgress";
}
@model List<Dictionary<string, object>>



@{
    var averageGrade = Convert.ToDouble(ViewBag.AverageGrade);
    var averageCompletion = Convert.ToDouble(ViewBag.AverageSubmissionCompletion);
    var selectedClassId = ViewBag.SelectedClassId as int?;
    var classes = ViewBag.Classes as List<Dictionary<string, object>> ?? new List<Dictionary<string, object>>();
}

<style>
    .card {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

    .table {
        margin-top: 10px;
    }

    .table-dark th {
        background-color: #343a40 !important;
    }

    .filter-dropdown {
        margin-bottom: 15px;
    }

    /* Improved styling for the Student Progress page */
    .container {
        max-width: 90%;
    }

    h3 {
        font-weight: 600;
        color: #212529;
        border-bottom: 3px solid #6e8efb;
        display: inline-block;
        padding-bottom: 5px;
    }

    .filter-dropdown {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .filter-dropdown label {
        font-weight: 500;
    }

    .form-select {
        width: auto;
        padding: 8px;
        border-radius: 8px;
        border: 1px solid #ced4da;
    }

    .card {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        transition: all 0.3s ease-in-out;
        border: none;
    }

    .card-header {
        background-color: #6e8efb;
        color: white;
        font-weight: 600;
        padding: 15px;
        border-radius: 10px 10px 0 0;
    }

    .card-body {
        padding: 20px;
        background: #f8f9fa;
    }

    .table {
        margin-top: 10px;
        border-radius: 8px;
        overflow: hidden;
        background: white;
    }

    .table thead th {
        background: #6e8efb;
        color: white;
        text-align: center;
    }

    .table tbody tr:hover {
        background-color: rgba(40, 167, 69, 0.1);
    }

    .table td, .table th {
        padding: 12px;
        text-align: center;
        vertical-align: middle;
    }
</style>

<div class="container mt-4">
    <h3 class="mb-3 text-dark">Student Progress</h3>
    <form method="get" class="filter-dropdown">
        <label for="classFilter">Filter by Class:</label>
        <select name="classId" id="classFilter" class="form-select pe-5" onchange="this.form.submit()">
            <option value="">All Classes</option>
            @foreach (var cls in classes)
            {
                <option value="@cls["ClassId"]" selected="@(selectedClassId == (int)cls["ClassId"] ? "selected" : null)">
                    @cls["ClassName"]
                </option>
            }
        </select>
    </form>

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Student Progress</h5>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Class</th>
                        <th>Last Submission</th>
                        <th>Completion Rate</th>
                        <th>Average Grade Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model)
                    {
                        <tr>
                            <td>@student["Name"]</td>
                            <td>@student["ClassName"]</td>
                            <td>
                                @if (student["LastActive"] is DateTime lastActive && lastActive != DateTime.MinValue)
                                {
                                    @lastActive.ToShortDateString()
                                }
                                else
                                {
                                    <span>No Activity</span>
                                }
                            </td>
                            <td>@Convert.ToDouble(student["SubmissionCompletionRate"])%</td>
                            <td>@($"{Convert.ToDouble(student["AverageGrade"]):0.00}%")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>




@*
@{
    Layout = "~/Views/Shared/_InstructorLayout.cshtml";
    ViewData["Title"] = "Student Progress";
    ViewData["ActivePage"] = "StudentProgress";
}
@model List<Dictionary<string, object>>
@{
    var averageGrade = Convert.ToDouble(ViewBag.AverageGrade);
    var averageCompletion = Convert.ToDouble(ViewBag.AverageSubmissionCompletion);
    var selectedClassId = ViewBag.SelectedClassId as int?;
    var classes = ViewBag.Classes as List<Dictionary<string, object>> ?? new List<Dictionary<string, object>>();
}

<style>
    body {
        background-color: #f4f7f9;
    }

    .container {
        max-width: 1200px;
    }

    h3 {
        font-weight: bold;
        color: #333;
        text-align: center;
        margin-bottom: 20px;
    }

    .card {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
        background: #ffffff;
    }

        .card:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        font-size: 18px;
        font-weight: bold;
        background: #007bff;
        color: white;
        text-align: center;
    }

    .table thead th {
        background-color: #343a40;
        color: white;
        text-align: center;
    }

    .table tbody td {
        text-align: center;
    }

    .progress-bar {
        background-color: #28a745 !important;
    }
</style>

<div class="container mt-4">
    <h3 class="text-primary">Student Progress</h3>

    <div class="row">
        <!-- Student Overview -->
        <div class="col-md-4">
            <div class="card shadow-lg text-center p-3">
                <div class="card-header">Student Overview</div>
                <div class="card-body">
                    <img src="/images/student-avatar.png" alt="Student Avatar" class="rounded-circle" width="100">
                    <h5 class="mt-3">@ViewData["StudentName"]</h5>
                    <p class="text-muted">Class: @ViewData["ClassName"]</p>
                    <p><strong>Overall Grade: </strong> @ViewData["OverallGrade"]%</p>
                    <p><strong>Assignments Submitted: </strong> @ViewData["SubmittedAssignments"]/@ViewData["TotalAssignments"]</p>
                </div>
            </div>
        </div>

        <!-- Performance Chart -->
        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header">Performance Chart</div>
                <div class="card-body">
                    <canvas id="performanceChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Assignment Performance Table -->
    <div class="mt-4">
        <div class="card shadow-lg">
            <div class="card-header">Assignment Performance</div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Assignment</th>
                            <th>Due Date</th>
                            <th>Grade</th>
                            <th>Submission Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var assignment in ViewData["Assignments"] as List<dynamic>)
                        {
                            <tr>
                                <td>@assignment.Title</td>
                                <td>@assignment.DueDate.ToString("dd MMM yyyy")</td>
                                <td>@assignment.Grade%</td>
                                <td>
                                    <span class="badge @(assignment.Submitted ? "bg-success" : "bg-danger")">
                                        @(assignment.Submitted ? "Submitted" : "Pending")
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('performanceChart').getContext('2d');
    var performanceChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewData["ChartLabels"])),
            datasets: [{
                label: 'Grade (%)',
                data: @Html.Raw(Json.Serialize(ViewData["ChartData"])),
                borderColor: '#007bff',
                fill: false,
                tension: 0.3
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: { beginAtZero: true, max: 100 }
            }
        }
    });
</script>
*@