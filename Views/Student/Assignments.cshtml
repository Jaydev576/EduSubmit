@model IEnumerable<EduSubmit.Models.Assignment>

@{
    ViewData["Title"] = "Assignments";
    ViewData["ActivePage"] = "Assignments";
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
}

<!-- Responsive Fixes -->
<style>
    @@media (max-width: 768px) {
        table td,
        table th {
            font-size: 0.9rem;
            white-space: normal !important;
        }

        .card .form-label {
            font-size: 1rem;
        }

        .card select {
            font-size: 0.95rem;
        }

        .btn-sm {
            font-size: 0.85rem;
        }
    }

    body {
        overflow-x: hidden;
    }
</style>

<!-- Start body content wrapper to manage height and layout -->
<div class="d-flex flex-column min-vh-100">
    <main class="flex-grow-1">
        <div class="container-fluid mt-4 px-3 px-md-4">
            <!-- Floating Header -->
            <div class="card border border-primary shadow-sm mb-3">
                <div class="card-body text-center">
                    <h2 class="text-primary">📚 Assignments</h2>
                </div>
            </div>

            <!-- Filters -->
            <div class="card p-3 shadow-sm border-0 mb-3" style="background: #F8FEFF; border-radius: 12px;">
                <div class="row g-3">
                    <!-- Subject Filter -->
                    <div class="col-12 col-md-6">
                        <label for="subjectFilter" class="form-label fw-bold text-dark">Filter by Subject:</label>
                        <select id="subjectFilter" class="form-select border-0 shadow-sm" style="background-color: #ffffff;" onchange="filterAssignments()">
                            <option value="">📚 All Subjects</option>
                            @foreach (var subject in Model.Select(a => a.SubjectName).Distinct().Where(s => s != null)) {
                                <option value="@subject">@subject</option>
                            }
                        </select>
                    </div>

                    <!-- Due Date (Month) Filter -->
                    <div class="col-12 col-md-6">
                        <label for="monthFilter" class="form-label fw-bold text-dark">Filter by Due Date (Month):</label>
                        <select id="monthFilter" class="form-select border-0 shadow-sm" style="background-color: #ffffff;" onchange="filterAssignments()">
                            <option value="" selected>📅 All Months</option>
                            @for (int month = 1; month <= 12; month++) {
                                string monthName = new DateTime(DateTime.Now.Year, month, 1).ToString("MMMM");
                                <option value="@month">@monthName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <!-- Assignments Table -->
            @if (Model.Any()) {
                <div class="table-responsive mt-3">
                    <table class="table table-bordered table-hover text-center align-middle shadow-sm">
                        <thead class="text-white" style="background: linear-gradient(135deg, #66D9EF, #409EFF);">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.First().Title)</th>
                                <th>📖 Subject</th>
                                <th>@Html.DisplayNameFor(model => model.Description)</th>
                                <th>@Html.DisplayNameFor(model => model.DueDate)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var assignment in Model) {
                                bool isSubmitted = ViewBag.SubmittedAssignments != null &&
                                ((List<int>)ViewBag.SubmittedAssignments).Contains(assignment.AssignmentId);

                                if (!isSubmitted) {
                                    <tr class="assignment-row" data-subject="@assignment.SubjectName" data-duemonth="@assignment.DueDate.Month">
                                        <td>@assignment.Title</td>
                                        <td>@assignment.SubjectName</td>
                                        <td class="text-break">@assignment.Description</td>
                                        <td>@assignment.DueDate.ToString("yyyy-MM-dd HH:mm")</td>
                                        <td>
                                            <a asp-controller="Submission" asp-action="Submit" asp-route-id="@assignment.AssignmentId"
                                               class="btn btn-primary btn-sm shadow-sm">📤 Submit</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
            else {
                <p class="text-muted text-center fs-5 mt-3">No pending assignments. 🎉</p>
            }
        </div>
    </main>
</div>

<!-- JavaScript for Filtering -->
<script>
    function filterAssignments() {
        var selectedSubject = document.getElementById("subjectFilter").value.toLowerCase();
        var selectedMonth = document.getElementById("monthFilter").value;
        var rows = document.querySelectorAll(".assignment-row");

        rows.forEach(row => {
            var subject = row.getAttribute("data-subject")?.toLowerCase() ?? '';
            var dueMonth = row.getAttribute("data-duemonth");

            var subjectMatch = (selectedSubject === "" || subject === selectedSubject);
            var monthMatch = (selectedMonth === "" || dueMonth === selectedMonth);

            row.style.display = (subjectMatch && monthMatch) ? "" : "none";
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        filterAssignments();
    });
</script>